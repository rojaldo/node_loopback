# GET https://opentdb.com/api/v1/cards?amount=14

# GET https://opentdb.com/api/v1/token

# PUT https://opentdb.com/api/v1/token/{token}?command=reset

# GET https://opentdb.com/api/v1/categories

# GET https://opentdb.com/api/v1/categories/{id}

# GET https://opentdb.com/api/v1/stats



openapi: '3.0.3'
info:
  title: My OpenTDB API
  description: API for Open Trivia Database, a trivia question database.
  termsOfService: https://opentdb.com/terms
  version: '1.0'
servers:
  - description: localhost
    url: http://localhost:8080
  - description: production
    url: https://opentdb.com
  - description: testing
    url: https://testing.opentdb.com

paths:
  /api/v1/cards:
    get:
      summary: Get trivia questions
      description: "
        Retrieves trivia questions from the Open Trivia Database with these parameters:\n
        - amount: Number of trivia questions to retrieve.\n
        - category: Category ID of the trivia questions. A number from 9 to 32.\n
        - difficulty: Difficulty level of the trivia questions (easy, medium, hard).\n
        - type: Type of trivia questions (multiple choice, true/false).\n
        - token: Token for user-specific trivia questions.\n
        - encode: Encoding type for the trivia questions (url3986, base64, none).\n
        "
      parameters:
        - name: amount
          in: query
          required: true
          description: Number of trivia questions to retrieve.
          schema:
            type: integer
            example: 10
        - name: category
          in: query
          required: false
          description: Category ID of the trivia questions.
          schema:
            type: integer
            example: 9
        - name: difficulty
          in: query
          required: false
          description: Difficulty level of the trivia questions.
          schema:
            type: string
            enum:
              - easy
              - medium
              - hard
            example: medium
        - name: type
          in: query
          required: false
          description: Type of trivia questions, either multiple choice (4) or true/false.
          schema:
            type: string
            enum:
              - multiple
              - boolean
            example: multiple
        - name: token
          in: query
          required: false
          description: Token for user-specific trivia questions.
          schema:
            type: string
            example: abc123
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: 
                type: object
                properties:
                  response_code:
                    type: integer
                    example: 0
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/TriviaQuestion'
components:
  schemas:
    TriviaQuestion:
      type: object
      properties:
        category:
          type: string
          example: "Science: Computers"
        type:
          type: string
          example: multiple
        difficulty:
          type: string
          enum:
            - easy
            - medium
            - hard
          example: medium
        question:
          type: string
          example: What is the capital of France?
        correct_answer:
          type: string
          example: Paris
        incorrect_answers:
          type: array
          items:
            type: string
            example: [London, Berlin, Madrid]
